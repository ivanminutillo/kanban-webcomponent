/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import {
  bin,
  members,
  output,
} from './components/interfaces';

import {
  Bin as OceBin
} from './components/bin/index';

declare global {
  interface HTMLOceBinElement extends OceBin, HTMLElement {
  }
  var HTMLOceBinElement: {
    prototype: HTMLOceBinElement;
    new (): HTMLOceBinElement;
  };
  interface HTMLElementTagNameMap {
    "oce-bin": HTMLOceBinElement;
  }
  interface ElementTagNameMap {
    "oce-bin": HTMLOceBinElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "oce-bin": JSXElements.OceBinAttributes;
    }
  }
  namespace JSXElements {
    export interface OceBinAttributes extends HTMLAttributes {
      cards?: Array<any>;
      due?: string;
      note?: string;
      outputs?: Array<output>;
      title?: string;
    }
  }
}


import {
  Card as OceCard
} from './components/card/index';

declare global {
  interface HTMLOceCardElement extends OceCard, HTMLElement {
  }
  var HTMLOceCardElement: {
    prototype: HTMLOceCardElement;
    new (): HTMLOceCardElement;
  };
  interface HTMLElementTagNameMap {
    "oce-card": HTMLOceCardElement;
  }
  interface ElementTagNameMap {
    "oce-card": HTMLOceCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "oce-card": JSXElements.OceCardAttributes;
    }
  }
  namespace JSXElements {
    export interface OceCardAttributes extends HTMLAttributes {
      action?: any;
      due?: string;
      members?: Array<members>;
      note?: string;
    }
  }
}


import {
  Kanban as OceKanban
} from './components/kanban/index';

declare global {
  interface HTMLOceKanbanElement extends OceKanban, HTMLElement {
  }
  var HTMLOceKanbanElement: {
    prototype: HTMLOceKanbanElement;
    new (): HTMLOceKanbanElement;
  };
  interface HTMLElementTagNameMap {
    "oce-kanban": HTMLOceKanbanElement;
  }
  interface ElementTagNameMap {
    "oce-kanban": HTMLOceKanbanElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "oce-kanban": JSXElements.OceKanbanAttributes;
    }
  }
  namespace JSXElements {
    export interface OceKanbanAttributes extends HTMLAttributes {
      bins?: Array<bin>;
      due?: string;
    }
  }
}


import {
  Output as OceOutput
} from './components/output/index';

declare global {
  interface HTMLOceOutputElement extends OceOutput, HTMLElement {
  }
  var HTMLOceOutputElement: {
    prototype: HTMLOceOutputElement;
    new (): HTMLOceOutputElement;
  };
  interface HTMLElementTagNameMap {
    "oce-output": HTMLOceOutputElement;
  }
  interface ElementTagNameMap {
    "oce-output": HTMLOceOutputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "oce-output": JSXElements.OceOutputAttributes;
    }
  }
  namespace JSXElements {
    export interface OceOutputAttributes extends HTMLAttributes {
      outputs?: Array<output>;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
